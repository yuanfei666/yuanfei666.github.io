<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[打印全排列]]></title>
    <url>%2F2019%2F02%2F02%2F%E6%89%93%E5%8D%B0%E5%85%A8%E6%8E%92%E5%88%97%2F</url>
    <content type="text"><![CDATA[题目:给定几个不重复数字,请输出全排列示例:1,2,3输出:1,2,3 1,3,2 2,1,3 2,3,1 3,2,1 3,1,2思考:给定的字符是1,2,3,…n全排列会允许任一字符能到达任一位置比如:1,2,3如果固定 1为第一个字符,则需要对 2,3 进行全排列如果固定 2为第一个字符,则需要对 1,3 进行全排列(为什么不是3,1被?这里是将1与2位置交换,方便思考,以免混乱)如果固定 3位第一个字符,则需要对 2,1 进行全排列 也就是说:给定k=0,k及其之后任意元素交换到位置k,此时输出都是一个全排列k不断增加,直到k=数组长度,则表示已经尝试了所有的全排列似乎就可以使用递归了,固定某一段位置,对剩下部分求全排列 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * @author wangwei * @date 2019/1/25 20:43 * @classDescription 打印n个数的全排列:每个元素都可以放到位置k, k 初始化为0,k之后的元素都可以交换到位置k, * 每个元素都可以放到k+1, * 知道k位于最后一个位置,表示已经处理完,可以输出 * 比如输入 3 * 输出:1,2,3 * 1,3,2 * 2,1,3 * 2,3,1 * 3,2,1 * 3,1,2 */public class FullPermutation &#123; public static void print(int array[],int k)&#123; if(k==array.length-1)&#123; for(int i=0;i&lt;array.length;i++)&#123; System.out.print(array[i]+" "); &#125; System.out.println(); return; &#125; for(int i=k;i&lt;array.length;i++)&#123; ArrayUtil.swap(array,k,i); print(array,k+1); ArrayUtil.swap(array,k,i); &#125; &#125; public static void main(String[] args) &#123; int [] array=new int[]&#123;1,2,3&#125;; print(array,0); &#125; /** * 思考:如果有重复元素,那么怎么输出所有的全排列呢? * 需要记录与当前k交换的元素值,如果同一种元素交换到k位置过,那么就不再交换 */&#125; 测试效果:输入 1,2,3输出: 变式:给定几个数字(可能重复),请输出全排列示例:1,2^,2输出:1,2^,2 (姑且认为2是不一样的) 这里是1与1交换 1,2,2^ (重复) —– 2^与2交换 2,2^,1 - —- 1与2交换 2,1,2^ —– 2^与1交换 2^,1,2(重复) —– 1与2^ 交换 2^,2,1(重复) —— 1与2交换 重复元素怎么处理呢?? 标记已经交换过的元素,如果交换过,则不再交换 123456789101112131415161718192021public static void print(int array[],int k)&#123; if(k==array.length-1)&#123; for(int i=0;i&lt;array.length;i++)&#123; System.out.print(array[i]+" "); &#125; System.out.println(); return; &#125; // boolean[] record=new boolean[1024];//记录交换的数据 for(int i=k;i&lt;array.length;i++)&#123; if(record[array[i]])&#123; continue;//有交换记录,跳过此次交换 &#125; ArrayUtil.swap(array,k,i); print(array,k+1); ArrayUtil.swap(array,k,i); record[array[i]]=true; &#125; &#125; 测试效果:1,2,2输出:]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[原]使用栈寻找迷宫通路]]></title>
    <url>%2F2019%2F01%2F28%2F%E5%8E%9F-%E4%BD%BF%E7%94%A8%E6%A0%88%E5%AF%BB%E6%89%BE%E8%BF%B7%E5%AE%AB%E9%80%9A%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[问题描述:给定一个n*n的迷宫矩阵,障碍物记为1,无障碍记为0 int[][] map = new int[][]{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},{1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},{1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},{1, 1, 1, 0, 0, 1, 1, 1, … 作者：qq_36922927 发表于 2019/01/28 11:24:10 原文链接 https://blog.csdn.net/qq_36922927/article/details/86672963 阅读：24]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]字符串匹配算法kmp]]></title>
    <url>%2F2019%2F01%2F26%2F%E5%8E%9F-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E7%AE%97%E6%B3%95kmp%2F</url>
    <content type="text"><![CDATA[问题:给定原串origin,求target 串在原串第一次出现的位置,若不存在,输出-1例如: origin:abcdeftarget:bc输出:1朴素算法最直观的思路(朴素算法): 取target的首元素与origin的首元素比较,如果相同,执行2两个字符相同,继续比较两个串的下一个元素如果出现元素不同3.1 如果上一个元素是匹配的(也就是当前比较的不是target串的首字符)… 作者：qq_36922927 发表于 2019/01/26 21:33:49 原文链接 https://blog.csdn.net/qq_36922927/article/details/86661194 阅读：37]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]我的2018-2019]]></title>
    <url>%2F2019%2F01%2F26%2F%E5%8E%9F-%E6%88%91%E7%9A%842018-2019%2F</url>
    <content type="text"><![CDATA[习惯性的习惯性的，每当一个新的阶段或者是有些感想时，一般是在时间剩余不多的的时候。习惯性的，也常常会在这个时候立下一大堆今天决定的，第二天就倒塌的体无完肤的flag。习惯性的，但是这里不能再是习惯性的。转眼，就得步入社会，面临残酷的社会竞争，离开隔离社会的最后一堵墙。欠清晰的认识自己经常觉得自己学到一些东西，感觉比人了不起，比别人强。但事实上，那常常是伪装，缺乏自信的伪装而已。很多时候，… 作者：qq_36922927 发表于 2019/01/26 19:43:49 原文链接 https://blog.csdn.net/qq_36922927/article/details/86660314 阅读：77]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]java 中的各种奇怪的执行顺序之对象篇]]></title>
    <url>%2F2019%2F01%2F25%2F%E5%8E%9F-java-%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%AF%87%2F</url>
    <content type="text"><![CDATA[面试题中常常遇见子类继承父类,new一个子类对象,请写出执行顺序,着实恶心.写个小小demo,来理解一下. public class Parent { public int publicPro; private int privatePro; protected int protectedPro; static { System.out.prin… 作者：qq_36922927 发表于 2019/01/25 22:40:43 原文链接 https://blog.csdn.net/qq_36922927/article/details/86652577 阅读：11]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]java 中的各种奇怪的执行顺序之异常篇]]></title>
    <url>%2F2019%2F01%2F25%2F%E5%8E%9F-java-%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E4%B9%8B%E5%BC%82%E5%B8%B8%E7%AF%87%2F</url>
    <content type="text"><![CDATA[try{statement1;}catch(ExceptionType1 e1){ statement2;} catch(ExceptionType2 e2){ statement3; }finally{statement4;} 情况讨论: 1,statement1 抛出异常e,如果e是e1类型或子类型,那么就会进入 statement2,不会进入 statement3… 作者：qq_36922927 发表于 2019/01/25 22:39:11 原文链接 https://blog.csdn.net/qq_36922927/article/details/86652842 阅读：10]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]全排列的打印]]></title>
    <url>%2F2019%2F01%2F25%2F%E5%8E%9F-%E5%85%A8%E6%8E%92%E5%88%97%E7%9A%84%E6%89%93%E5%8D%B0%2F</url>
    <content type="text"><![CDATA[题目:给定几个不重复数字,请输出全排列示例:1,2,3输出:1,2,31,3,22,1,32,3,13,2,13,1,2思考:给定的字符是1,2,3,…n全排列会允许任一字符能到达任一位置比如:1,2,3如果固定 1为第一个字符,则需要对 2,3 进行全排列如果固定 2为第一个字符,则需要对 1,3 进行全排列(为什么不是3,1被?这里是将1与2位置交换,方便思考,以免混乱… 作者：qq_36922927 发表于 2019/01/25 21:47:53 原文链接 https://blog.csdn.net/qq_36922927/article/details/86652314 阅读：21]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原](二)设计模式之代理模式 ---aop]]></title>
    <url>%2F2019%2F01%2F24%2F%E5%8E%9F-%E4%BA%8C-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F-aop%2F</url>
    <content type="text"><![CDATA[面向对象–OOP,针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分面向切面–AOP(Aspect Oriented Programming):针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果。这两种设计思想在目标上有着本质的差异AOP使用场景：日志记录，权限，跟踪，优化和监控，事物的处理，资… 作者：qq_36922927 发表于 2019/01/24 13:12:50 原文链接 https://blog.csdn.net/qq_36922927/article/details/86624558 阅读：28 评论：1 查看评论]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原](一)设计模式之策略模式]]></title>
    <url>%2F2019%2F01%2F24%2F%E5%8E%9F-%E4%B8%80-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[注:以jdk中的一角来理解设计模式的运用策略模式:在不同的情形下选取不同的方式去处理比如:jdk中的 java.util.Arrays.sort() 方法,则是根据待排序数组的初始的有序程度,以及规模来选取不同的排序方式处理排序具体实现是这个方法:策略1:对于小数组,直接使用&amp;amp;quot;快排&amp;amp;quot;策略2:对于不是高度结构化(各区间内有序)的数组,执行&amp;amp;quot;快排&amp;amp;quot;策略3:高度结构化的,使用归并排 作者：qq_36922927 发表于 2019/01/24 12:09:20 原文链接 https://blog.csdn.net/qq_36922927/article/details/86622952 阅读：19]]></content>
  </entry>
  <entry>
    <title><![CDATA[[转]git常用操作]]></title>
    <url>%2F2019%2F01%2F20%2F%E8%BD%AC-git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[转载自博客:此博客主要是如何新建仓库,创建分支,切换分支,合并分支,删除分支demo:新建仓库:git init 可以将当前文件夹初始化为本地git仓库git 仓库默认有一个master分支但一般更改代码是在新起一个分支,比如叫做develop提交本地仓库到远程仓库 git remote add origin https://github.com/XXX(username)/YYY... 作者：qq_36922927 发表于 2019/01/20 16:44:17 原文链接 https://blog.csdn.net/qq_36922927/article/details/86563285 阅读：15]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]unity3d 官方demo入门概念]]></title>
    <url>%2F2019%2F01%2F20%2F%E5%8E%9F-unity3d-%E5%AE%98%E6%96%B9demo%E5%85%A5%E9%97%A8%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[unity3d 基本操作基本概念gameObjects:游戏中一切出现的都是objectscomponent: gameObjects 本身是没有各种行为的,是通过给object添加component让其具有移动等等行为或者是属性transform:移动,理解为物体移动,给相关objects设置一些属性参数,比如x,y,z 改变其空间位置. x(左),y(上),z 垂直屏幕向里几个… 作者：qq_36922927 发表于 2019/01/20 13:27:52 原文链接 https://blog.csdn.net/qq_36922927/article/details/85915608 阅读：15]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]数据结构之查找]]></title>
    <url>%2F2019%2F01%2F15%2F%E5%8E%9F-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%9F%A5%E6%89%BE%2F</url>
    <content type="text"><![CDATA[常见查找算法顺序查找二分查找索引查找hash查找关键字:可能重复次关键字:唯一查找表:顺序查找:空间复杂度:o(1)时间复杂度:最好:o(1)最坏:o(n)平均:o(n)如果已知概率,可将大概率数据放在靠前,以减少平均查找长度折半查找:有序表:顺序表中的记录按照关键字值有序时间复杂度:log(n)以深度为h的满二叉树为例,即n=2h−1 n=2^h-1n=… 作者：qq_36922927 发表于 2019/01/15 16:03:45 原文链接 https://blog.csdn.net/qq_36922927/article/details/85942990 阅读：27]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]hibernate select操作出现字段被截断错误]]></title>
    <url>%2F2019%2F01%2F02%2F%E5%8E%9F-hibernate-select%E6%93%8D%E4%BD%9C%E5%87%BA%E7%8E%B0%E5%AD%97%E6%AE%B5%E8%A2%AB%E6%88%AA%E6%96%AD%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[hibernate 使用面向对象的思想,将数据表抽象为类,数据记录抽象为对象,比较完美的减少了对sql的显式使用,用起来也是比较方便,通过操作对象就能增删改数据库记录.优点: 单表查询简单,crud完美移植到方法的调用,对开发人员sql的要求比较低缺点:多表查询比较麻烦,映射比较繁琐字段完全查出,性能有消耗这些优缺点只是个人理解. 接下来才是本文重点:主角登场–遇到的问… 作者：qq_36922927 发表于 2019/01/02 20:03:59 原文链接 https://blog.csdn.net/qq_36922927/article/details/85549273 阅读：47]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原](五) .net学习 Cache]]></title>
    <url>%2F2018%2F12%2F31%2F%E5%8E%9F-%E4%BA%94-net%E5%AD%A6%E4%B9%A0-Cache%2F</url>
    <content type="text"><![CDATA[cache1,asp.net使用cache,缓存对象2,asp页面使用cache,缓存页面配置:在aspx的源码视图添加:&amp;amp;lt;%@ OutputCache Duration=&amp;quot;120&amp;quot; VaryByParam=&amp;quot;none&amp;quot; %&amp;amp;gt; 其中:Duration指定过期时间(秒),VaryByParam 指定通知此页面重新缓存的参数名如果是&amp;quot;none&amp;amp 作者：qq_36922927 发表于 2018/12/31 21:14:37 原文链接 https://blog.csdn.net/qq_36922927/article/details/85404964 阅读：9]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原](六) 折腾的asp.net 发布]]></title>
    <url>%2F2018%2F12%2F31%2F%E5%8E%9F-%E5%85%AD-%E6%8A%98%E8%85%BE%E7%9A%84asp-net-%E5%8F%91%E5%B8%83%2F</url>
    <content type="text"><![CDATA[1,iis需要配置:开启windows功能,所有关于.net ,asp的windows 默认是没有安装iis的,但是可以通过开启windows功能,使用iis2,虚拟目录权限需要配置配置为 Authenticated Users ,NETWORK SERVICE3,Web.config 连接字符串需要修改比如开发时本地是这样的: &amp;amp;amp;amp;amp;amp;amp;amp;amp;lt;add name=&amp;amp;amp;amp;amp;amp 作者：qq_36922927 发表于 2018/12/31 20:49:01 原文链接 https://blog.csdn.net/qq_36922927/article/details/85456777 阅读：22]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原](四).net ajax异步刷新]]></title>
    <url>%2F2018%2F12%2F30%2F%E5%8E%9F-%E5%9B%9B-net-ajax%E5%BC%82%E6%AD%A5%E5%88%B7%E6%96%B0%2F</url>
    <content type="text"><![CDATA[ajax=Asynchronous Javascript And XmlHttpRequest(XHR)ajax是对通用标准的封装。AJAX关键技术： 1，使用XHTML(HTML)和css构建标准的显示层2，使用DOM（document object model）进行动态显示和交互3，使用XML和XLST进行数据交换和操纵4，使用XMLHttpRequest异步获取数据5，使用ja… 作者：qq_36922927 发表于 2018/12/30 10:42:58 原文链接 https://blog.csdn.net/qq_36922927/article/details/84982284 阅读：30]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]卸载小乌龟报错 invalid,提示&quot; 无法使用此安装源&quot;]]></title>
    <url>%2F2018%2F12%2F27%2F%E5%8E%9F-%E5%8D%B8%E8%BD%BD%E5%B0%8F%E4%B9%8C%E9%BE%9F%E6%8A%A5%E9%94%99-invalid-%E6%8F%90%E7%A4%BA-quot-%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E6%AD%A4%E5%AE%89%E8%A3%85%E6%BA%90-quot%2F</url>
    <content type="text"><![CDATA[svn 无法卸载:由于挪动了安装包位置或者是修改了安装包名字,卸载时需要选择安装程序,就会提示安装程序名invalid,提示&amp;quot; 无法使用此安装源&amp;quot;更可气的是,卸载不了,也修复不了,而且代码也不能同步等操作解决:将安装程序名字更改为提示所要求的名字,如果只是挪动了安装程序位置,找到该位置的安装程序即可.如果安装包被删除了,去小乌龟官网下载对应版本即可 … 作者：qq_36922927 发表于 2018/12/27 23:34:32 原文链接 https://blog.csdn.net/qq_36922927/article/details/85315720 阅读：19]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]svn提交代码出现 no lock token available]]></title>
    <url>%2F2018%2F12%2F27%2F%E5%8E%9F-svn%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%87%BA%E7%8E%B0-no-lock-token-available%2F</url>
    <content type="text"><![CDATA[svn 提交报错:no lock token available如果是自己给锁定了,需要释放 如果是别人锁定了,让别人释放,我这个就比较厉害了,自己锁定,而且还不能释放!!!提交报如下错误 正确操作:在svn 中浏览仓库,定位到被锁定的文件右键-&amp;amp;gt;break lock,然后再提交就没问题了. … 作者：qq_36922927 发表于 2018/12/27 17:40:11 原文链接 https://blog.csdn.net/qq_36922927/article/details/85294490 阅读：62]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]HTTP Status 500 - Could not write content]]></title>
    <url>%2F2018%2F12%2F20%2F%E5%8E%9F-HTTP-Status-500-Could-not-write-content%2F</url>
    <content type="text"><![CDATA[后台查询数据向前端返回数据时报错：HTTP Status 500 - Could not write content**1，原因：执行对应的sql发现有一个字段查出来时是null的，而封装到某个对象中时，并未给属性是否为null，检测，如果为null就赋予一个符合该属性类型的值，即可。 if (!Objects.isNull(row[8])) { tem… 作者：qq_36922927 发表于 2018/12/20 08:52:19 原文链接 https://blog.csdn.net/qq_36922927/article/details/85111328 阅读：50]]></content>
  </entry>
  <entry>
    <title><![CDATA[HTTP Status 500 - Could not write content***]]></title>
    <url>%2F2018%2F12%2F19%2Fjson-error%2F</url>
    <content type="text"><![CDATA[后台查询数据向前端返回数据时报错：HTTP Status 500 - Could not write content** 1，原因：执行对应的sql发现有一个字段查出来时是null的，而封装到某个对象中时，并未给属性是否为null，检测，如果为null就赋予一个符合该属性类型的值，即可。123456if (!Objects.isNull(row[8])) &#123; tempOrderId = (Integer) row[8]; &#125; else &#123; tempOrderId = 0; &#125; 2，疑问比较奇特的是：debug看见数据已经被封装到对象中，但是在controller层转为json就抛异常了如下图：详细异常信息： HTTP Status 500 - Could not write content: (was java.lang.NullPointerException) (through reference chain: com.werun.template.common.utils.BaseObjectResult[“data”]-&gt;com.werun.template.api.model.OrderModifyNoticeDetailResultBean[“tempOrderId”]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.werun.template.common.utils.BaseObjectResult[“data”]-&gt;com.werun.template.api.model.OrderModifyNoticeDetailResultBean[“tempOrderId”]) 为什么会这样呢？按照报错信息翻译是databind异常了， 3,这条数据可是有10多个字段，难道每个字段去加if和else?再回到代码中：发现数据类型都是使用的封装类型Integer,但是没有改变setter、getter 123456public int getTempOrderId() &#123; return tempOrderId; &#125; public void setTempOrderId(int tempOrderId) &#123; this.tempOrderId = tempOrderId; &#125; java类转为json类是通过getter方法来生成json的具体属性的，getXXX 就会生成一个XXX的json串的属性 4，真实原因：这里由于 属性 tempOrderId 是Integer类型，并且为null，调用get时会自动拆箱为int，但是null给拆成为int是啥效果呢？可以写代码试试：12345 @Test public void testInteger()&#123; Integer a=null; int b=a;&#125; 控制台输出： java.lang.NullPointerException at com.werun.template.common.TestUtil.testInteger(TestUtil.java:797) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method), 5，验证为了验证猜想：将getter的返回参数有int改为Integer（只更改getter返回值类型）123456public Integer getTempOrderId() &#123; return tempOrderId; &#125; public void setTempOrderId(int tempOrderId) &#123; this.tempOrderId = tempOrderId; &#125; 测试：{ “message”: “获取成功”, “data”: { “noticeId”: 164, “noticeNum”: “1545132031742”, “noticeTime”: 1545132031740, “noticeTypeCode”: “14010”, “noticeTypeName”: “订单中止审核”, “modifierId”: 272, “modifierName”: “张三”, “orderId”: 13, “tempOrderId”: null,//这个字段在作怪 “orderNum”: “K1，0，501”, “clientId”: 11, “clientName”: “，，，，，测试”, “orderStatusCode”: “，，，”, “orderStatusName”: “，，，”, “modifyContent”: “，，，”, “remarks”: “设计主管处 同意终止订单1363”, “auditResultCode”: “1300”, “auditResultName”: “接单” }, “success”: true} 至此问题解决！包装类型-&gt;基本类型可能有问题基本类型-&gt;包装类型，没问题 6 总结：数据库查询出的结果尽量使用包装类型，避免null造成的影响运算的地方使用基本类型，减少对象的创建]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>fastxml</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇hexo博客]]></title>
    <url>%2F2018%2F12%2F18%2Fhello%2F</url>
    <content type="text"><![CDATA[这是文章摘要，为了给自己一篇安静的学习天地，博客迁址于github！记录新的开始！ 习惯性的，每当一个新的阶段或者是有些感想时，一般是在时间剩余不多的的时候。习惯性的，也常常会在这个时候立下一大堆今天决定的，第二天就倒塌的体无完肤的flag。习惯性的，但是这里不能再是习惯性的。转眼，就得步入社会，面临残酷的社会竞争，离开隔离社会的最后一堵墙。经常觉得自己学到一些东西，感觉比人了不起，比别人强。但事实上，那常常是伪装，缺乏自信的伪装而已。很多时候，学到的，只是那么浅浅的一层，每个人不用太费思考就能做到的，有什么值得骄傲的？ 要提前意识到，企业不是福利结构，所有公司都不是，不会花开支来养活闲人。有人能为了自己的编程的爱好，白天上班，凌晨三点起床学习，这令我敬佩。但是如果只是 停留在敬佩，不觉得这“敬佩”一词有些苍白吗？当然，敬佩，也不是让自己同他人模仿，而是从中能学到点什么有意义的东西–那就是，为了爱好，为了兴趣，自己能耐得住寂寞，从海绵中挤出时间来完善自己，提高自己。 一个很有趣的现象，计算机专业的都很会使用百度，google，bing等工具去搜索问题的解决办法，而其他专业就感觉不会上网一样（即使是转专业到计算机专业的同学），渐渐地，我学会了问题常不加思索就上网去寻求答案，最直接的答案，简直是那种一比一的答案，少了对其中缘由的探索，少了自己对问题的思考，现在开始慎用搜索工具。 csdn，是我大学以来，一直在坚持写的，自己也很积极的在往上面更新一些博客，但是这些博客的内容，大多平淡无奇，味如嚼蜡，没有挖出更深层次的东西，缺少了自己的思考。就像是“ 改成xxx即可”，少了追问，少了求知的热情。从以后开始，没有营养的博客不公开发表，与他人博客雷同的内容不公开发表，没有自己思考的博客不公开发表。时间管理，高中是一段很美好的时光，时间管理基本不需要自己特意的下功夫，全是学校给控制好了。来到大学，学校的时间控制没有那么多条框，就需要自己的控制，而我通常是一个不善于计划时间的人，突然想起什么，就会l立刻停下手中的东西，转投入另一种东西的思考，这点真是令人苦恼。在校的作息时间，很不规律，晚上12点休息，第二天9点起床，为什么不能是11点休息，六点半起床呢？这富裕出来的一个半小时，可以用来看看书，谢谢感想，谢谢收获或，来给自己专业知识，工作能力充充电，这应该比在被窝里度过更有价值和意义吧？ 目前自己对技术的广度感觉还是可以，涉猎较多，但是实际项目中的技术涉猎很窄，而且深度远远不够。专业技能便是算法、计算机组成原理、计算机网络这些经典技能很是欠缺，必当花费时间全力掌握。 当然，每个人都不要妄自菲薄，只要是能意识到自己的问题，那么就还不算晚。自己的特点，似乎就是没有特点，要强制拽出一个特点，那就是对待事物比较认真，但是好像还不够认真，容易被外界所影响。自己选择的路，含泪跪着也要走好，走完！ 近期安排： 1，完成手里的应该做的东西 2，思考未来的职业定位 3，储备缺少的专业知识（书籍理论+实践+总结+分享） 4，与积极的人交流共事 5，主动屏蔽不良的环境因素 6，珍惜现有的时间 7，必读书籍《算法导论》、《计算机组成原理》、《计算机通信网络》 8，必须代码实践 算法+sql 此文见证自己从开始新征程，欢迎志同道合的人交流学习，一起为春招而准备，加油！]]></content>
      <categories>
        <category>-心情笔记</category>
      </categories>
      <tags>
        <tag>-心情笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F18%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]rabbitMQ的简单使用]]></title>
    <url>%2F2018%2F12%2F12%2F%E5%8E%9F-rabbitMQ%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[文章目录direct模式：直来直往，指哪到哪儿配置：生产者：消费者：特点：交换机模式：交换机模式1：topic模式，配置：生产者：消费者：过程：交换机模式2Fanout模式：配置：生产者：消费者：特点：交换机模式3：Headers模式，配置：生产者：消费者：特点：总结：生产者：制造消息消费者：获取消息，处理消息路由机制：中转消息四种模式：后三种是交换机模式Direct：不需要交换机，直… 作者：qq_36922927 发表于 2018/12/12 21:10:51 原文链接 https://blog.csdn.net/qq_36922927/article/details/84979496 阅读：26]]></content>
  </entry>
  <entry>
    <title><![CDATA[[原]double check机制真的是完美的吗？]]></title>
    <url>%2F2018%2F12%2F12%2F%E5%8E%9F-double-check%E6%9C%BA%E5%88%B6%E7%9C%9F%E7%9A%84%E6%98%AF%E5%AE%8C%E7%BE%8E%E7%9A%84%E5%90%97%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[单例我们是经常会用到的一种设计模式，为了减少对象的创建。一个类有且仅有一个实例，并且自行实例化向整个系统提供。但是在多线程的情况下，我们不得不考虑如何保证正确高效的获得单例对象。单例的一般写法：(这里以饿汉为例）public class Singleton(){private static Singleton instance;private Singleton(){}publi… 作者：qq_36922927 发表于 2018/12/12 19:02:27 原文链接 https://blog.csdn.net/qq_36922927/article/details/84977365 阅读：41 评论：1 查看评论]]></content>
  </entry>
</search>
